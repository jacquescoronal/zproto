name: CI

on:
  pull_request:
  workflow_dispatch:

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -Dwarnings -Dmissing_debug_implementations
    steps:
      - uses: actions/checkout@v4
      - name: Install libudev
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install libudev-dev
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo check --all-features

  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
    env:
      RUSTFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v4
      - name: Install libudev
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install libudev-dev
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo test --features=ascii,binary --workspace --verbose

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install libudev
        run: |
          sudo apt update
          sudo apt install libudev-dev
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - run: cargo clippy --all-features -- -D warnings

  spelling:
    name: Spell Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm install @cspell/dict-rust
      - uses: streetsidesoftware/cspell-action@v5
        with:
          incremental_files_only: false

  doc:
    name: Rustdoc
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: -Dwarnings -Drustdoc::missing_crate_level_docs -Dmissing_docs
    steps:
      - uses: actions/checkout@v4
      - name: Install libudev
        run: |
          sudo apt update
          sudo apt install libudev-dev
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-docs
      - uses: Swatinem/rust-cache@v2
      - run: cargo doc --no-deps --all-features
